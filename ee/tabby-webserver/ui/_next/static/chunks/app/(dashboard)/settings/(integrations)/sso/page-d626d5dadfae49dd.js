(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9157],{14375:function(n,e,t){"use strict";t.d(e,{j:function(){return o}});let i=n=>"boolean"==typeof n?"".concat(n):0===n?"0":n,r=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.flat(1/0).filter(Boolean).join(" ")},o=(n,e)=>t=>{var o;if((null==e?void 0:e.variants)==null)return r(n,null==t?void 0:t.class,null==t?void 0:t.className);let{variants:s,defaultVariants:a}=e,d=Object.keys(s).map(n=>{let e=null==t?void 0:t[n],r=null==a?void 0:a[n];if(null===e)return null;let o=i(e)||i(r);return s[n][o]}),u=t&&Object.entries(t).reduce((n,e)=>{let[t,i]=e;return void 0===i||(n[t]=i),n},{}),l=null==e?void 0:null===(o=e.compoundVariants)||void 0===o?void 0:o.reduce((n,e)=>{let{class:t,className:i,...r}=e;return Object.entries(r).every(n=>{let[e,t]=n;return Array.isArray(t)?t.includes({...a,...u}[e]):({...a,...u})[e]===t})?[...n,t,i]:n},[]);return r(n,d,l,null==t?void 0:t.class,null==t?void 0:t.className)}},60860:function(n,e,t){Promise.resolve().then(t.bind(t,20325))},75561:function(n,e,t){"use strict";t.d(e,{B:function(){return o}});var i=t(18500);let r={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":i.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":i.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":i.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":i.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":i.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":i.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":i.k6,"\n  mutation DeleteGithubRepositoryProvider($id: ID!) {\n    deleteGithubRepositoryProvider(id: $id)\n  }\n":i.Zj,"\n  mutation UpdateGithubRepositoryProvider(\n    $input: UpdateRepositoryProviderInput!\n  ) {\n    updateGithubRepositoryProvider(input: $input)\n  }\n":i.Z_,"\n  mutation DeleteGitlabRepositoryProvider($id: ID!) {\n    deleteGitlabRepositoryProvider(id: $id)\n  }\n":i.$1,"\n  mutation UpdateGitlabRepositoryProvider(\n    $input: UpdateRepositoryProviderInput!\n  ) {\n    updateGitlabRepositoryProvider(input: $input)\n  }\n":i.Qn,"\n  mutation DeleteGithubSelfHostedRepositoryProvider($id: ID!) {\n    deleteGithubSelfHostedRepositoryProvider(id: $id)\n  }\n":i.YO,"\n  mutation UpdateGithubSelfHostedRepositoryProvider(\n    $input: UpdateSelfHostedRepositoryProviderInput!\n  ) {\n    updateGithubSelfHostedRepositoryProvider(input: $input)\n  }\n":i.xj,"\n  mutation DeleteGitlabSelfHostedRepositoryProvider($id: ID!) {\n    deleteGitlabSelfHostedRepositoryProvider(id: $id)\n  }\n":i.Fz,"\n  mutation UpdateGitlabSelfHostedRepositoryProvider(\n    $input: UpdateSelfHostedRepositoryProviderInput!\n  ) {\n    updateGitlabSelfHostedRepositoryProvider(input: $input)\n  }\n":i.zI,"\n    mutation UpdateGithubProvidedRepositoryActive($id: ID!, $active: Boolean!) {\n      updateGithubProvidedRepositoryActive(id: $id, active: $active)\n    }\n  ":i.SS,"\n    mutation UpdateGitlabProvidedRepositoryActive($id: ID!, $active: Boolean!) {\n      updateGitlabProvidedRepositoryActive(id: $id, active: $active)\n    }\n  ":i.lc,"\n    mutation UpdateGithubSelfHostedProvidedRepositoryActive(\n      $id: ID!\n      $active: Boolean!\n    ) {\n      updateGithubSelfHostedProvidedRepositoryActive(id: $id, active: $active)\n    }\n  ":i.ax,"\n    mutation UpdateGitlabSelfHostedProvidedRepositoryActive(\n      $id: ID!\n      $active: Boolean!\n    ) {\n      updateGitlabSelfHostedProvidedRepositoryActive(id: $id, active: $active)\n    }\n  ":i.wj,"\n  mutation CreateGithubRepositoryProvider(\n    $input: CreateRepositoryProviderInput!\n  ) {\n    createGithubRepositoryProvider(input: $input)\n  }\n":i.Xt,"\n  mutation CreateGithubSelfHostedRepositoryProvider(\n    $input: CreateSelfHostedRepositoryProviderInput!\n  ) {\n    createGithubSelfHostedRepositoryProvider(input: $input)\n  }\n":i.t3,"\n  mutation CreateGitlabRepositoryProvider(\n    $input: CreateRepositoryProviderInput!\n  ) {\n    createGitlabRepositoryProvider(input: $input)\n  }\n":i.Sx,"\n  mutation CreateGitlabSelfHostedRepositoryProvider(\n    $input: CreateSelfHostedRepositoryProviderInput!\n  ) {\n    createGitlabSelfHostedRepositoryProvider(input: $input)\n  }\n":i.PP,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":i.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":i.ad,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":i.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":i.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":i.L$,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":i.Fd,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":i.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":i.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n    }\n  }\n":i.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":i.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":i.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":i.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":i.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":i.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":i.dv,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":i.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":i.wW,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":i.xX,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":i.qq,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":i.vK,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":i.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":i.S_,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.YR,"\n  query RepositorySearch($kind: RepositoryKind!, $id: ID!, $pattern: String!) {\n    repositorySearch(kind: $kind, id: $id, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":i.BH,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n    }\n  }\n":i.HC,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":i.eZ,"\n  query MeQuery {\n    me {\n      id\n      authToken\n      email\n      isAdmin\n      isPasswordSet\n      name\n    }\n  }\n":i.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":i.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n    }\n  }\n":i.a,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":i.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          finishedAt\n          exitCode\n          stdout\n          stderr\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":i.np,"\n  query ListJobs {\n    jobs\n  }\n":i.Ax,"\n  query ListUsers($after: String, $before: String, $first: Int, $last: Int) {\n    users(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.by,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":i.Wd,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":i.Sm,"\n  query ListGithubRepositoryProviders(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    githubRepositoryProviders(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.BK,"\n  query ListGithubRepositories(\n    $providerIds: [ID!]!\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    githubRepositories(\n      providerIds: $providerIds\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          vendorId\n          githubRepositoryProviderId\n          name\n          gitUrl\n          active\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.rV,"\n  query ListGitlabRepositoryProviders(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitlabRepositoryProviders(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.EW,"\n  query ListGitlabRepositories(\n    $providerIds: [ID!]!\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitlabRepositories(\n      providerIds: $providerIds\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          vendorId\n          gitlabRepositoryProviderId\n          name\n          gitUrl\n          active\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.ct,"\n  query ListGithubSelfHostedRepositoryProviders(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    githubSelfHostedRepositoryProviders(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.dE,"\n  query ListGitlabSelfHostedRepositoryProviders(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitlabSelfHostedRepositoryProviders(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.KQ,"\n  query ListGithubSelfHostedRepositories(\n    $providerIds: [ID!]!\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    githubSelfHostedRepositories(\n      providerIds: $providerIds\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          vendorId\n          githubRepositoryProviderId\n          name\n          gitUrl\n          active\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.fx,"\n  query ListGitlabSelfHostedRepositories(\n    $providerIds: [ID!]!\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitlabSelfHostedRepositories(\n      providerIds: $providerIds\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          vendorId\n          name\n          gitUrl\n          active\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.kz};function o(n){var e;return null!==(e=r[n])&&void 0!==e?e:{}}},43240:function(n,e,t){"use strict";t.d(e,{BX:function(){return i.B}});var i=t(75561)},11978:function(n,e,t){n.exports=t(77280)},7600:function(n,e,t){"use strict";var i=t(48717).Z.Symbol;e.Z=i},17996:function(n,e,t){"use strict";t.d(e,{Z:function(){return $}});var i=t(7600),r=Object.prototype,o=r.hasOwnProperty,s=r.toString,a=i.Z?i.Z.toStringTag:void 0,d=function(n){var e=o.call(n,a),t=n[a];try{n[a]=void 0;var i=!0}catch(n){}var r=s.call(n);return i&&(e?n[a]=t:delete n[a]),r},u=Object.prototype.toString,l=i.Z?i.Z.toStringTag:void 0,$=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":l&&l in Object(n)?d(n):u.call(n)}},64380:function(n,e){"use strict";var t="object"==typeof global&&global&&global.Object===Object&&global;e.Z=t},48717:function(n,e,t){"use strict";var i=t(64380),r="object"==typeof self&&self&&self.Object===Object&&self,o=i.Z||r||Function("return this")();e.Z=o},1853:function(n,e){"use strict";e.Z=function(n){for(var e=-1,t=null==n?0:n.length,i=0,r=[];++e<t;){var o=n[e];o&&(r[i++]=o)}return r}},826:function(n,e,t){"use strict";t.d(e,{Z:function(){return a}});var i,r=t(90830),o=t(20568),s=t(70014),a=(i=t(54549).Z,function(n,e,t){var a=Object(n);if(!(0,o.Z)(n)){var d=(0,r.Z)(e,3);n=(0,s.Z)(n),e=function(n){return d(a[n],n,a)}}var u=i(n,e,t);return u>-1?a[d?n[u]:u]:void 0})},54549:function(n,e,t){"use strict";t.d(e,{Z:function(){return u}});var i=function(n,e,t,i){for(var r=n.length,o=t+(i?1:-1);i?o--:++o<r;)if(e(n[o],o,n))return o;return -1},r=t(90830),o=t(59348),s=1/0,a=function(n){var e,t=(e=n)?(e=(0,o.Z)(e))===s||e===-s?(e<0?-1:1)*17976931348623157e292:e==e?e:0:0===e?e:0,i=t%1;return t==t?i?t-i:t:0},d=Math.max,u=function(n,e,t){var o=null==n?0:n.length;if(!o)return -1;var s=null==t?0:a(t);return s<0&&(s=d(o+s,0)),i(n,(0,r.Z)(e,3),s)}},38813:function(n,e){"use strict";var t=Array.isArray;e.Z=t},84639:function(n,e){"use strict";e.Z=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},96786:function(n,e){"use strict";e.Z=function(n){return null!=n&&"object"==typeof n}}},function(n){n.O(0,[872,55,2178,652,6201,3449,4553,830,1957,7444,1565,325,3375,5289,1744],function(){return n(n.s=60860)}),_N_E=n.O()}]);